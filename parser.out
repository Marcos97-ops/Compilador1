Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     statement -> PRINT LPAREN STRING RPAREN

Terminals, with rules where they appear

LPAREN               : 2
PRINT                : 2
RPAREN               : 2
STRING               : 2
error                : 

Nonterminals, with rules where they appear

program              : 0
statement            : 1

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) statement -> . PRINT LPAREN STRING RPAREN

    PRINT           shift and go to state 3

    program                        shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .

    $end            reduce using rule 1 (program -> statement .)


state 3

    (2) statement -> PRINT . LPAREN STRING RPAREN

    LPAREN          shift and go to state 4


state 4

    (2) statement -> PRINT LPAREN . STRING RPAREN

    STRING          shift and go to state 5


state 5

    (2) statement -> PRINT LPAREN STRING . RPAREN

    RPAREN          shift and go to state 6


state 6

    (2) statement -> PRINT LPAREN STRING RPAREN .

    $end            reduce using rule 2 (statement -> PRINT LPAREN STRING RPAREN .)

